#!/bin/bash
mkdir -p /data/logs
PANDORA_NEXT_DATA="/data"
PT_PORT=${PT_PORT:-8081}
Pdlport=${Pdlport:-8181}
pandora_version=$(curl -s "https://api.github.com/repos/gngpp/ninja/releases/latest" | jq -r .tag_name)
new_url=$(curl -s "https://api.github.com/repos/Yanyutin753/refresh-gpt-chat/releases/latest" | jq -r .assets[0].browser_download_url)
tokensTool_version=$(echo "$new_url" | sed 's|https://github.com|https://hub.fastgit.org|g')
filenames=$(curl -s "https://api.github.com/repos/Yanyutin753/refresh-gpt-chat/releases/latest" | jq -r .assets[0].name)
vern=$(echo $pandora_version | sed 's/v//')
arch=$(uname -m)
case $arch in
    aarch64) filename="ninja-${vern}-aarch64-unknown-linux-musl.tar.gz" ume=aarch64;;
    arm) filename="ninja-${vern}-arm-unknown-linux-musl.tar.gz" ume=arm;;
    x86_64) filename="ninja-${vern}-x86_64-unknown-linux-musl.tar.gz" ume=amd64;;
    *)
        echo "没有该系统架构运行包" >> /data/logs/$(date +"%Y-%m-%d")logs.txt
        exit 1
        ;;
esac
if [ ! -f "$filename" ]; then
    if [ ! -f "/data/ninja" ]; then
        echo "下载：$filename与$filenames" >> /data/logs/$(date +"%Y%m%d")_log.txt
        rm -rf ninja-* /data/ninja
        wget "https://hub.fastgit.org/gngpp/ninja/releases/download/$pandora_version/$filename"
        if [ ! -f "filenames" ]; then
            rm -rf refresh-*
            wget "$tokensTool_version"
        fi
        tar -xf "$filename"
        cp -r ninja /data/
        chmod a+x /data/ninja
        ninja gt -o serve.toml
        sed -i 's/"bind" = "0.0.0.0:7999"/"bind": "0.0.0.0:'"$Pdlport"'"/' serve.toml
        cp -n serve.toml /data/
        chmod a+x /data/ninja
        echo "下载完成" >> /data/logs/$(date +"%Y%m%d")_log.txt
    else
        if [  "$new" = 1  ]; then
            echo "更新：$filename和$filenames" >> /data/logs/$(date +"%Y%m%d")_log.txt
            rm -rf ninja-* /data/ninja refresh-*
            wget "https://hub.fastgit.org/gngpp/ninja/releases/download/$pandora_version/$filename"
            if [ ! -f "filenames" ]; then
                rm -rf refresh-*
                wget "$tokensTool_version"
            fi
            tar -xf "$filename"
            cp -r ninja /data/
            chmod a+x /data/ninja
            echo "更新完成" >> /data/logs/$(date +"%Y%m%d")_log.txt
        fi
    fi
else
    echo "必要文件已存在，无需下载" >> /data/logs/$(date +"%Y%m%d")_log.txt
fi
while true
do
    current_date=$(date +"%Y%m%d")
    log_file="${current_date}_log.txt"
    java_process=$(ps aux | grep 'java' | grep "$filenames" | grep -v grep)
    pandora_log=$(ps aux | grep "ninja" | grep -v grep)
    if [ -z "$pandora_log" ]; then
        echo "运行ninja"
        /data/ninja start -C /data/serve.toml >> /data/logs/$log_file 2>&1 &
        sleep 3
    fi
    if [ -z "$java_process" ]; then
        echo "运行$filenames"
        java -XX:+UseG1GC -Xms16m -Xmx32m -XX:MaxMetaspaceSize=64m -jar "$filenames" --server.port==$PT_PORT --server.servlet.context-path=$Tool_path --getAccessTokenUrl=https://chat.kwxos.top/url/auth/refresh_token --chatUrl=https://chat.kwxos.top/v1/chat/completions >> /data/logs/$log_file 2>&1 &
        sleep 3
    fi
    current_hour=$(date +"%H")
    current_minute=$(date +"%M")
    target_hour=0
    target_minute=0
    time_difference=$(( (target_hour - current_hour) * 3600 + (target_minute - current_minute) * 60 ))
    if [ $time_difference -lt 0 ]; then
        time_difference=$((time_difference + 24 * 3600))
    fi
    sleep $time_difference
done
tail -f /dev/null
